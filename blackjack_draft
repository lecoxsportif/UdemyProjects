############### Blackjack Project #####################

#Difficulty Normal ðŸ˜Ž: Use all Hints below to complete the project.
#Difficulty Hard ðŸ¤”: Use only Hints 1, 2, 3 to complete the project.
#Difficulty Extra Hard ðŸ˜­: Only use Hints 1 & 2 to complete the project.
#Difficulty Expert ðŸ¤¯: Only use Hint 1 to complete the project.

############### Our Blackjack House Rules #####################

## The deck is unlimited in size. 
## There are no jokers. 
## The Jack/Queen/King all count as 10.
## The the Ace can count as 11 or 1.
## Use the following list as the deck of cards:
## cards = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]
## The cards in the list have equal probability of being drawn.
## Cards are not removed from the deck as they are drawn.
## The computer is the dealer.

##################### Hints #####################

#Hint 1: Go to this website and try out the Blackjack game: 
#   https://games.washingtonpost.com/games/blackjack/
#Then try out the completed Blackjack project here: 
#   http://blackjack-final.appbrewery.repl.run

#Hint 2: Read this breakdown of program requirements: 
#   http://listmoz.com/view/6h34DJpvJBFVRlZfJvxF
#Then try to create your own flowchart for the program.

#Hint 3: Download and read this flow chart I've created: 
#   https://drive.google.com/uc?export=download&id=1rDkiHCrhaf9eX7u7yjM1qwSuyEk-rPnt

#Hint 4: Create a deal_card() function that uses the List below to *return* a random card.
#11 is the Ace.
#cards = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]

#Hint 5: Deal the user and computer 2 cards each using deal_card() and append().
#user_cards = []
#computer_cards = []

#Hint 6: Create a function called calculate_score() that takes a List of cards as input 
#and returns the score. 
#Look up the sum() function to help you do this.

#Hint 7: Inside calculate_score() check for a blackjack (a hand with only 2 cards: ace + 10) and return 0 instead of the actual score. 0 will represent a blackjack in our game.

#Hint 8: Inside calculate_score() check for an 11 (ace). If the score is already over 21, remove the 11 and replace it with a 1. You might need to look up append() and remove().

#Hint 9: Call calculate_score(). If the computer or the user has a blackjack (0) or if the user's score is over 21, then the game ends.

#Hint 10: If the game has not ended, ask the user if they want to draw another card. If yes, then use the deal_card() function to add another card to the user_cards List. If no, then the game has ended.

#Hint 11: The score will need to be rechecked with every new card drawn and the checks in Hint 9 need to be repeated until the game ends.

#Hint 12: Once the user is done, it's time to let the computer play. The computer should keep drawing cards as long as it has a score less than 17.

#Hint 13: Create a function called compare() and pass in the user_score and computer_score. If the computer and user both have the same score, then it's a draw. If the computer has a blackjack (0), then the user loses. If the user has a blackjack (0), then the user wins. If the user_score is over 21, then the user loses. If the computer_score is over 21, then the computer loses. If none of the above, then the player with the highest score wins.

#Hint 14: Ask the user if they want to restart the game. If they answer yes, clear the console and start a new game of blackjack and show the logo from art.py.

#Blackjack Game

from art import logo
import random
from replit import clear

print(logo)

def deal_card():
    cards = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]
    card = random.choice(cards)
    return card

def compare(score1, score2):
    if score1 == score2:
        print(f"It's a draw! Your score {score1} is the same as the computer {score2}.")
        return score1, score2
    elif score2 == 0:
        print(f"The computer has a blackjack! You lose!")
        return score1, score2
    elif score1 == 0:
        print(f"You have a blackjack! You win!")
        return score1, score2
    elif score1 > 21:
        print(f"You're score {score1} is over 21. You're busted!!")
        return score1, score2
    elif score2 > 21:
        print(f"The computer's score {score1} is over 21. You win!")
        return score1, score2
    elif score1 > score2:
        print(f"You're score {score1} is higher than the computer {score2}. You win!")
        return score1, score2
    else:
        print(f"The computer {score2} is higher than your score {score1}. You lose!")
        return score1, score2

def calculate_score(cards):
    sum_cards = sum(cards)
    if sum_cards == 21:
        sum_cards = 0
        print(sum_cards)
        return sum_cards
    elif sum_cards > 21:
        for i in range(len(cards)):
            if cards[i] == 11:
                cards[i] = 1
                print(cards)
                print(sum(cards))
                sum_cards = sum(cards)
                return sum_cards
        else:
            print("Score is over 21! Please try again :)")
            return sum_cards
    else:
        return sum_cards

def play_game():

    print(logo)
    
    user_cards = []
    computer_cards = []
    for i in range(2):
        user1 = deal_card()
        user_cards.append(user1)
        computer1 = deal_card()
        computer_cards.append(computer1)
        print(user_cards, computer_cards)

    calculate_score(user_cards)
    calculate_score(computer_cards)

    game_on = True
    while game_on:
        check1 = calculate_score(user_cards)
        check2 = calculate_score(computer_cards)

        if check1 == 0:
            game_on = False
            print("Game Over! You win!!!") 
        elif check1 > 21:
            game_on = False
            print("Game Over! You lose!!!") 
        elif check2 == 0:
            game_on = False
            print("Game Over! Computer wins!!!") 
        elif input(f"Type 'y' if you want to draw another card, or type 'n' to let the computer play: ") == 'y':      
            user_twist = deal_card() 
            print(user_twist)
            user_cards.append(user_twist)
            print(user_cards)
        else:
            while check2 < 17:
                computer_twist = deal_card()
                print(computer_twist)
                computer_cards.append(computer_twist)
                print(computer_cards)
                check2 = calculate_score(computer_cards)

                if check2 == 0:
                    game_on = False
                    print("Game Over! Computer wins!!!") 
                elif check2 > 21:
                    game_on = False
                    print("Game Over! Computer loses. You win!!!") 

            game_on = False

    compare(check1, check2)
    
while input(f"Type 'y' to continue playing Blackjack, or type 'n' to end this session: ") == 'y':
    clear()
    play_game()
